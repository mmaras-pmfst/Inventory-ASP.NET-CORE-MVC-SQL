
@{
}

<div class="text-center">
    <h1 class="display-4">Purchases</h1>
   
</div>
<input type="text" id="myInput" onkeyup="searchStocks()" placeholder="Search for stocks..">
<div class="listsContainer">
    <table id="purchaseTable">
        <tr>
            <th>Purchas Id</th>
            <th>Stock</th>
            <th>Date</th>
            <th></th>
            <th></th>

        </tr>

    </table>
</div>
 <div id="myModal" class="modal">
     <div class="modal-content">
    <span class="close" id="closeModal" onclick="closeForm()">&times;</span>
    <div class="listsContainer">
    <table id="selectedTable">
        <tr>
            <th>Item Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th></th>
            <th></th>

        </tr>

    </table>
</div>
  </div>
</div>
@*Edit one item*@
  <div id="myModal2" class="modal2">

  <!-- Modal content -->
  <div class="modal-content2">
    <span class="close2" onclick="closeForm2()">&times;</span>
    <form>
       <label for="itemList">Item: </label>
        <select name="itemList" id="itemList">
        
        </select>
        <br />
        <label for="qty">Quantity: </label>
        <input placeholder="Quantity" type="number" id="qty" name="qty" min="1" max="1000"/>
        <br />
        <input class="itemForm-input" type="button" value="Save Changes" id="editButton"/>


    </form>
  </div>

</div>

<script type="text/javascript">
var purchasesFromDb = [];
var selectedPurchase = [];
var transaction = [];
var allItems = [];

function openForm(id,r) {
    document.getElementById("myModal").style.display = "block";
    document.getElementById("closeModal").onclick = function(){
        closeForm(r);
    }
    info(id);
}
function closeForm(r) {
    document.getElementById("myModal").style.display = "none";
    var table = document.getElementById("selectedTable");
    if (selectedPurchase.length > 0) {
        for (var i = 0; i < selectedPurchase.length; i++) {
            console.log("Hello");
            table.deleteRow(1);
            
        }
        selectedPurchase = [];
    }
    else {
        var v = r.parentNode.parentNode.rowIndex;
        document.getElementById("purchaseTable").deleteRow(v);
    }
    

        
}
function openForm2(id,r) {
    console.log(r);
    document.getElementById("myModal2").style.display = "block";
    document.getElementById("editButton").onclick = function(){
        saveChanges(r);
    }
   
    transaction = purchasesFromDb.filter(x => x.transactionItemId == id);
    console.log("Transaction: ",transaction);
    let itemId = transaction[0].item.itemId;
    axios.get("/api/item").then(response => (fillItem(response.data,itemId,transaction[0].qty),console.log("openForm2 response: "),console.log(response.data)));

}
function closeForm2() {
    document.getElementById("myModal2").style.display = "none";
}
function fillItem(items,id,qty) {
    allItems.push(items);
    for (var i = 0; i < items.length; i++) {
        var select = document.getElementById("itemList");
        var option=document.createElement("option");
        var node = items[i].itemName;
        option.innerHTML = node;
        option.value = items[i].itemId;
        option.setAttribute("id", `item${items[i].itemId}`);

        select.appendChild(option);
    }
    document.getElementById(`item${id}`).selected = true;
    document.getElementById("qty").value = qty;

}
function fillPurchaseTable(purchases) {
    purchasesFromDb = purchases;
    console.log("Nesto:");
    console.log(purchasesFromDb);
    console.log("--------------------------------");

    var table = document.getElementById("purchaseTable");
    var transactionIds = [];
    for (var i = 0; i < purchasesFromDb.length; i++) {
        if (transactionIds.includes(purchasesFromDb[i].transaction.transactionId)==false) {
            transactionIds.push(purchasesFromDb[i].transaction.transactionId);
            var tr = document.createElement("tr");
            var purchaseId = document.createElement("td");
            var stockName = document.createElement("td");
            var date = document.createElement("td");
            var del=document.createElement("td");
            var ed = document.createElement("td");

            purchaseId.innerHTML = purchasesFromDb[i].transaction.transactionId;
            stockName.innerHTML = purchasesFromDb[i].transaction.stock.stockName;
            date.innerHTML = purchasesFromDb[i].transaction.date;
            del.innerHTML=`<input type="button" value = "Delete" onclick=Delete(${purchasesFromDb[i].transaction.transactionId},this)>`;
            ed.innerHTML=`<input type="button" value = "View Items" onclick=openForm(${purchasesFromDb[i].transaction.transactionId},this)>`;

            tr.appendChild(purchaseId);
            tr.appendChild(stockName);
            tr.appendChild(date);
            tr.appendChild(del);
            tr.appendChild(ed);

            table.appendChild(tr);
        }
        
    }
}
function Delete(id,r) {
    console.log("Deleting...");
    axios.delete(`/api/transaction/${id}`);
    var i = r.parentNode.parentNode.rowIndex;
    console.log("Purchase od 0: ");
    console.log(purchasesFromDb[0]);
    document.getElementById("purchaseTable").deleteRow(i);
    purchasesFromDb = purchasesFromDb.filter(x => x.transaction.transactionId != id);
    
    
}
function saveChanges(r) {
    var i = r.parentNode.parentNode.rowIndex;

    console.log(r);
    //var result = [];
    console.log("items:");
    console.log(allItems[0]);
    var itemid = document.getElementById("itemList").value;
    var qty = document.getElementById("qty").value;
    var item = allItems[0].filter(x => x.itemId == Number(itemid));
    console.log("item:");
    console.log(item);
    var transactionItems=[]
    console.log("Cijena jednog: ", item[0].price);
    console.log("Količina: ", Number(qty));

    var transactionItem = {
        TransactionItemId: transaction[0].transactionItemId,
        TransactionId: transaction[0].transaction.transactionId,
        TransactionTypeId:transaction[0].transaction.transactionTypeId,
        StockId:transaction[0].transaction.stock.stockId,
        ItemId: itemid,
        Qty: qty,
        Price: item[0].price * Number(qty)
    };
    transactionItems.push(transactionItem);
    console.log(transactionItems);
    
    axios.put("/api/transaction/transactionedit", transactionItems).then(response => (console.log(response.data),
        document.getElementById("selectedTable").rows[i].cells[0].innerHTML=response.data.item.itemName,
        document.getElementById("selectedTable").rows[i].cells[1].innerHTML=response.data.price,
        document.getElementById("selectedTable").rows[i].cells[2].innerHTML=response.data.qty,
        items=[]
    ));
    
    


}
function info(id) {
    selectedPurchase = [];
    selectedPurchase = purchasesFromDb.filter(x => x.transaction.transactionId == id);
    console.log(selectedPurchase);
    var table = document.getElementById("selectedTable");
    for (var i = 0; i < selectedPurchase.length; i++) {
        var tr = document.createElement("tr");
        var itemName = document.createElement("td");
        var price = document.createElement("td");
        var qty = document.createElement("td");
        var del=document.createElement("td");
        var ed = document.createElement("td");

        itemName.innerHTML = selectedPurchase[i].item.itemName;
        price.innerHTML = selectedPurchase[i].price;
        qty.innerHTML=selectedPurchase[i].qty
        del.innerHTML=`<input type="button" value = "Delete" onclick=deleteItem(${selectedPurchase[i].transactionItemId},${selectedPurchase[i].item.itemId},this)>`;
        ed.innerHTML=`<input type="button" value = "Edit" onclick=openForm2(${selectedPurchase[i].transactionItemId},this)>`;
        tr.appendChild(itemName);
        tr.appendChild(price);
        tr.appendChild(qty);
        tr.appendChild(del);
        tr.appendChild(ed);

        table.appendChild(tr);
    } 

}
function deleteItem(id,id2,r) {
    axios.delete(`/api/transaction/item/${id}`);
    var i = r.parentNode.parentNode.rowIndex;
    document.getElementById("selectedTable").deleteRow(i);
    selectedPurchase = selectedPurchase.filter(x => x.transactionItemId != id);
    console.log(selectedPurchase.length);
    purchasesFromDb=purchasesFromDb.filter(x => x.transactionItemId != id);

}
function searchStocks() {
  var input, filter, table, tr, td, i, txtValue;
  input = document.getElementById("myInput");
  filter = input.value.toUpperCase();
  table = document.getElementById("purchaseTable");
  tr = table.getElementsByTagName("tr");
  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[1];
    if (td) {
      txtValue = td.textContent || td.innerText;
      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }       
  }
}

axios.get("/api/transaction/purchase").then(response => (fillPurchaseTable(response.data), console.log(response.data)));
</script>