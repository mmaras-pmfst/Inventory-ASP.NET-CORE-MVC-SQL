#pragma checksum "C:\Users\Marko\Desktop\New folder (2)\Inventory\Views\App\Items.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b0a27aa76d2fadf174536b934767fabb68c67436"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_App_Items), @"mvc.1.0.view", @"/Views/App/Items.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Marko\Desktop\New folder (2)\Inventory\Views\_ViewImports.cshtml"
using Inventory;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Marko\Desktop\New folder (2)\Inventory\Views\_ViewImports.cshtml"
using Inventory.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b0a27aa76d2fadf174536b934767fabb68c67436", @"/Views/App/Items.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ddd647dc521e354fabd3c5f5959fac0949cf3697", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_App_Items : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("unit1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("unit2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("unit3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Items</h1>
    <button onclick=""openForm()"">Add New Item</button>
   
</div>
<div>
    <label for=""categoryList"">Category: </label>
    <select name=""categoryList"" id=""categoryList"" oninput=""filterTable()"">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0a27aa76d2fadf174536b934767fabb68c674365551", async() => {
                WriteLiteral("All");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

    </select>

</div>
<div class=""listsContainer"">
    <table id=""itemTable"">
        <tr>
            <th>Item Name</th>
            <th>Category</th>
            <th>Unit</th>
            <th>Price(Kn)</th>
            <th></th>
            <th></th>

        </tr>

    </table>
</div>

");
            WriteLiteral("<div id=\"myModal\" class=\"modal\">\r\n\r\n  <!-- Modal content -->\r\n  <div class=\"modal-content\">\r\n    <span class=\"close\" onclick=\"closeForm()\">&times;</span>\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0a27aa76d2fadf174536b934767fabb68c674367029", async() => {
                WriteLiteral(@"
        <input placeholder=""Item name..."" id=""itemName""/>
        <label for=""categoryList3"">Category: </label>
        <select name=""categoryList3"" id=""categoryList3"">
        
        </select>

        <label for=""unitList"">Unit: </label>
        <select name=""unitList"" id=""unitList"">
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0a27aa76d2fadf174536b934767fabb68c674367611", async() => {
                    WriteLiteral("Kom");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0a27aa76d2fadf174536b934767fabb68c674368843", async() => {
                    WriteLiteral("kg");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0a27aa76d2fadf174536b934767fabb68c6743610074", async() => {
                    WriteLiteral("Lit");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n        </select>\r\n\r\n        <input placeholder=\"Price...\" id=\"price\"/>\r\n");
                WriteLiteral("\r\n        <input class=\"itemForm-input\" type=\"button\" value=\"Add\" id=\"addButton\" onclick=\"addItem()\" />\r\n\r\n\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n  </div>\r\n  </div>\r\n");
            WriteLiteral("  <div id=\"myModal2\" class=\"modal2\">\r\n\r\n  <!-- Modal content -->\r\n  <div class=\"modal-content2\">\r\n    <span class=\"close2\" onclick=\"closeForm2()\">&times;</span>\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0a27aa76d2fadf174536b934767fabb68c6743612762", async() => {
                WriteLiteral(@"
        <input placeholder=""Item name..."" id=""itemName2""/>
        <label for=""categoryList2"">Category: </label>
        <select name=""categoryList2"" id=""categoryList2"">
            
        </select>

        <label for=""unitList"">Unit: </label>
        <select name=""unitList"" id=""unitList2"">
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0a27aa76d2fadf174536b934767fabb68c6743613351", async() => {
                    WriteLiteral("Kom");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0a27aa76d2fadf174536b934767fabb68c6743614671", async() => {
                    WriteLiteral("kg");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0a27aa76d2fadf174536b934767fabb68c6743615990", async() => {
                    WriteLiteral("Lit");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n        </select>\r\n\r\n        <input placeholder=\"Price...\" id=\"price2\"/>\r\n\r\n        <input class=\"itemForm-input\" type=\"button\" value=\"Edit\" id=\"editButton\" />\r\n\r\n\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
  </div>

</div>

<script type=""text/javascript"">
window.onclick = function(event) {
    modal = document.getElementById(""myModal"");
  if (event.target == modal) {
    modal.style.display = ""none"";
  }
}
function openForm() {
    document.getElementById(""myModal"").style.display = ""block"";
    
}
function closeForm() {
      document.getElementById(""myModal"").style.display = ""none"";
      document.getElementById(""itemName"").value="""";
        
}
function openForm2(id,r) {
    var i = r.parentNode.parentNode.rowIndex;

    document.getElementById(""myModal2"").style.display = ""block"";
    axios.get(`/api/item/${id}`).then(response=>(console.log(response.data),
        document.getElementById(""itemName2"").value = response.data.itemName,
        document.getElementById(""price2"").value=response.data.price,
        setSelected(response.data.category.categoryId,response.data.unit.unitId),
        document.getElementById(""editButton"").setAttribute(""onclick"",`editItem(${id},${i})`)))
}
fun");
            WriteLiteral(@"ction setSelected(categoryValue,unitValue) {
    let category=document.getElementById(`category${categoryValue}`);
    category.selected = true;
    let unit = document.getElementById(`unit${unitValue}`);
    unit.selected = true;
    //menu.value = categoryValue;
    //var menu2=document.getElementById(""unitList2"");
    //menu2.value = unitValue;

}
function closeForm2() {
      document.getElementById(""myModal2"").style.display = ""none"";
}
function Delete(id,r) {
    console.log(""delete clik on "", id);
    axios.delete(`/api/item/${id}`);
    var i = r.parentNode.parentNode.rowIndex;
    document.getElementById(""itemTable"").deleteRow(i);
}
function fillCategory(categories) {
    for (var i = 0; i < categories.length; i++) {
        
        var select = document.getElementById(""categoryList"");
        var select2 = document.getElementById(""categoryList2"");
        var select3 = document.getElementById(""categoryList3"");



        var option=document.createElement(""option"");
     ");
            WriteLiteral(@"   var option2=document.createElement(""option"");
        var option3=document.createElement(""option"");



        var node = categories[i].categoryName;
        var node2 = categories[i].categoryName;
        var node3 = categories[i].categoryName;



        option.innerHTML = node;
        option2.innerHTML = node2;
        option3.innerHTML = node3;



        option.value = categories[i].categoryId;
        option2.value = categories[i].categoryId;
        option3.value = categories[i].categoryId;


        option2.setAttribute(""id"", `category${categories[i].categoryId}`)

        select.appendChild(option);
        select2.appendChild(option2);
        select3.appendChild(option3);



    }
}
function fillItem(items) {
    
    let table = document.getElementById(""itemTable"");
    for (var i = 0; i < items.length; i++) {
        var tr = document.createElement(""tr"");
        var itemName = document.createElement(""td"");
        var categoryName = document.createElemen");
            WriteLiteral(@"t(""td"");
        var unitName = document.createElement(""td"");
        var price = document.createElement(""td"");
        var del=document.createElement(""td"");
        var ed = document.createElement(""td"");

        
        itemName.innerHTML = items[i].itemName;
        categoryName.innerHTML = items[i].category.categoryName;
        unitName.innerHTML=items[i].unit.unitName;
        price.innerHTML=items[i].price;
        del.innerHTML=`<input type=""button"" value = ""Delete"" onClick=""Delete(${items[i].itemId},this)"">`;
        ed.innerHTML=`<input type=""button"" value = ""Edit"" onClick=""openForm2(${items[i].itemId},this)"">`;
        
        tr.appendChild(itemName);
        tr.appendChild(categoryName);
        tr.appendChild(unitName);
        tr.appendChild(price);
        tr.appendChild(del);
        tr.appendChild(ed);

        table.appendChild(tr);
    }

}
function addItem() {
    let menu = document.getElementById(""unitList"");
    let menu2 = document.getElementById(""category");
            WriteLiteral(@"List3"");

    let itemName = document.getElementById(""itemName"").value;
    let categoryId = menu2.value;
    let unitId = menu.value;
    let price = document.getElementById(""price"").value;
    

    let item = {
        ItemId:0,
        ItemName:itemName,
        CategoryId:Number(categoryId),
        UnitId:Number(unitId),
        Price:Number(price)
    }
    console.log(item);
    axios.post(""/api/item/additem"", item).then(response=>(addOneItem(response.data),console.log(response.data)));
    closeForm();



}
function editItem(id,i) {
    console.log(""edit clik on "", id);
    let menu2 = document.getElementById(""categoryList2"");
    let categoryId = menu2.value;
    let menu = document.getElementById(""unitList2"");
    let unitId = menu.value;
    let category = menu2.options[menu2.selectedIndex].text;
    let unit=menu.options[menu.selectedIndex].text;

    let editedItem = {
        ""ItemId"":id,
        ""ItemName"":document.getElementById(""itemName2"").value,
        ""C");
            WriteLiteral(@"ategoryId"":Number(categoryId),
        ""UnitId"":Number(unitId),
        ""Price"":document.getElementById(""price2"").value
    }
    axios.put(`/api/item/itemedit/`,editedItem);
    console.log(editedItem);
    document.getElementById(""itemTable"").rows[i].cells[0].innerHTML=document.getElementById(""itemName2"").value;
    document.getElementById(""itemTable"").rows[i].cells[1].innerHTML = category;
    document.getElementById(""itemTable"").rows[i].cells[2].innerHTML = unit;
    document.getElementById(""itemTable"").rows[i].cells[3].innerHTML = document.getElementById(""price2"").value;

    closeForm2();
}
function addOneItem(item) {
    let table = document.getElementById(""itemTable"");
    var tr = document.createElement(""tr"");
        var itemName = document.createElement(""td"");
        var categoryName = document.createElement(""td"");
        var unitName = document.createElement(""td"");
        var price = document.createElement(""td"");
        var del=document.createElement(""td"");
        var ed ");
            WriteLiteral(@"= document.createElement(""td"");

        
        itemName.innerHTML = item.itemName;
        categoryName.innerHTML = item.category.categoryName;
        unitName.innerHTML=item.unit.unitName;
        price.innerHTML=item.price;
        del.innerHTML=`<input type=""button"" value = ""Delete"" onClick=""Delete(${item.itemId},this)"">`;
        ed.innerHTML=`<input type=""button"" value = ""Edit"" onClick=""openForm2(${item.itemId},this)"">`;
        
        tr.appendChild(itemName);
        tr.appendChild(categoryName);
        tr.appendChild(unitName);
        tr.appendChild(price);
        tr.appendChild(del);
        tr.appendChild(ed);

        table.appendChild(tr);
}
function filterTable() {
  // Variables
  let dropdown, table, rows, cells, category, filter;
  dropdown = document.getElementById(""categoryList"");
  table = document.getElementById(""itemTable"");
  rows = table.getElementsByTagName(""tr"");
  filter = dropdown.options[dropdown.selectedIndex].text;
    console.log(""filter: "", fi");
            WriteLiteral(@"lter);
  // Loops through rows and hides those with countries that don't match the filter
  for (let row of rows) { // `for...of` loops through the NodeList
    cells = row.getElementsByTagName(""td"");
    category = cells[1] || null; // gets the 2nd `td` or nothing
    // if the filter is set to 'All', or this is the header row, or 2nd `td` text matches filter
    if (filter === ""All"" || !category || (filter === category.textContent)) {
      row.style.display = """"; // shows this row
    }
    else {
      row.style.display = ""none""; // hides this row
    }
  }
}
axios.get(""/api/item"").then(response => (fillItem(response.data), console.log(response.data)));
axios.get(""/api/category"").then(response => (fillCategory(response.data), console.log(response.data)));

</script>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
